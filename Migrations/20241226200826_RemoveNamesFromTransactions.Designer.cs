// <auto-generated />
using System;
using InventoryManagement;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Inventory_Management.Migrations
{
    [DbContext(typeof(InventoryDbContext))]
    [Migration("20241226200826_RemoveNamesFromTransactions")]
    partial class RemoveNamesFromTransactions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("InventoryManagement.CustomerEntity", b =>
                {
                    b.Property<int>("customerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("customerID"));

                    b.Property<string>("contactInfo")
                        .HasColumnType("longtext");

                    b.Property<string>("customerName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("customerID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            customerID = 1,
                            contactInfo = "123-456-7890",
                            customerName = "Customer A"
                        },
                        new
                        {
                            customerID = 2,
                            contactInfo = "",
                            customerName = "Customer B"
                        });
                });

            modelBuilder.Entity("InventoryManagement.ProductEntity", b =>
                {
                    b.Property<int>("productID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("productID"));

                    b.Property<int?>("customerID")
                        .HasColumnType("int");

                    b.Property<float?>("price")
                        .HasColumnType("float");

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("stock")
                        .HasColumnType("int");

                    b.Property<int?>("supplierID")
                        .HasColumnType("int");

                    b.HasKey("productID");

                    b.HasIndex("customerID");

                    b.HasIndex("supplierID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            productID = 1,
                            price = 10.99f,
                            productName = "Product A",
                            stock = 100,
                            supplierID = 1
                        },
                        new
                        {
                            productID = 2,
                            price = 20.49f,
                            productName = "Product B",
                            stock = 50
                        },
                        new
                        {
                            productID = 3,
                            customerID = 2,
                            price = 15.99f,
                            productName = "Product C",
                            stock = 75
                        });
                });

            modelBuilder.Entity("InventoryManagement.SupplierEntity", b =>
                {
                    b.Property<int>("supplierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("supplierID"));

                    b.Property<string>("contactInfo")
                        .HasColumnType("longtext");

                    b.Property<string>("supplierName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("supplierID");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            supplierID = 1,
                            contactInfo = "987-654-3210",
                            supplierName = "Supplier A"
                        },
                        new
                        {
                            supplierID = 2,
                            contactInfo = "",
                            supplierName = "Supplier B"
                        });
                });

            modelBuilder.Entity("InventoryManagement.TransactionEntity", b =>
                {
                    b.Property<int>("transactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("transactionID"));

                    b.Property<int?>("customerID")
                        .HasColumnType("int");

                    b.Property<int>("productID")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int?>("supplierID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("transactionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("transactionType")
                        .HasColumnType("longtext");

                    b.HasKey("transactionID");

                    b.HasIndex("customerID");

                    b.HasIndex("productID");

                    b.HasIndex("supplierID");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            transactionID = 1,
                            productID = 1,
                            quantity = 5,
                            transactionDate = new DateTime(2024, 12, 26, 21, 8, 26, 173, DateTimeKind.Local).AddTicks(8755),
                            transactionType = "Purchase"
                        },
                        new
                        {
                            transactionID = 2,
                            productID = 2,
                            quantity = 2,
                            transactionType = "Sale"
                        });
                });

            modelBuilder.Entity("InventoryManagement.ProductEntity", b =>
                {
                    b.HasOne("InventoryManagement.CustomerEntity", "customerEntity")
                        .WithMany("productEntities")
                        .HasForeignKey("customerID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("InventoryManagement.SupplierEntity", "supplierEntity")
                        .WithMany("productEntities")
                        .HasForeignKey("supplierID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("customerEntity");

                    b.Navigation("supplierEntity");
                });

            modelBuilder.Entity("InventoryManagement.TransactionEntity", b =>
                {
                    b.HasOne("InventoryManagement.CustomerEntity", "customerEntity")
                        .WithMany("transactionEntities")
                        .HasForeignKey("customerID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InventoryManagement.ProductEntity", "productEntity")
                        .WithMany("transactionEntities")
                        .HasForeignKey("productID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventoryManagement.SupplierEntity", "supplierEntity")
                        .WithMany("transactionEntities")
                        .HasForeignKey("supplierID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("customerEntity");

                    b.Navigation("productEntity");

                    b.Navigation("supplierEntity");
                });

            modelBuilder.Entity("InventoryManagement.CustomerEntity", b =>
                {
                    b.Navigation("productEntities");

                    b.Navigation("transactionEntities");
                });

            modelBuilder.Entity("InventoryManagement.ProductEntity", b =>
                {
                    b.Navigation("transactionEntities");
                });

            modelBuilder.Entity("InventoryManagement.SupplierEntity", b =>
                {
                    b.Navigation("productEntities");

                    b.Navigation("transactionEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
